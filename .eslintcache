[{"C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\index.js":"1","C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\App.js":"2","C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\reportWebVitals.js":"3","C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\component\\layout\\Navbar.js":"4","C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\component\\layout\\Footer.js":"5","C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\component\\layout\\Landing.js":"6","C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\component\\auth\\Register.js":"7","C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\component\\auth\\Login.js":"8","C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\store.js":"9","C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\reducers\\index.js":"10","C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\reducers\\authReducer.js":"11","C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\actions\\types.js":"12","C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\actions\\authActions.js":"13","C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\reducers\\errorReducer.js":"14","C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\utils\\setAuthToken.js":"15","C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\validation\\is-empty.js":"16","C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\component\\common\\TextFieldGroup.js":"17","C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\reducers\\profileReducer.js":"18","C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\component\\dashboard\\Dashboard.js":"19","C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\actions\\profileActions.js":"20","C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\component\\common\\Spinner.js":"21","C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\component\\common\\PrivateRoute.js":"22","C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\component\\create-profile\\CreateProfile.js":"23","C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\component\\common\\TextAreaFieldGroup.js":"24","C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\component\\common\\InputGroup.js":"25","C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\component\\common\\SelectListGroup.js":"26","C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\component\\dashboard\\profileActions.js":"27","C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\component\\dashboard\\ProfileActions.js":"28","C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\component\\edit-profile\\EditProfile.js":"29","C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\component\\add-credentials\\AddEducation.js":"30","C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\component\\add-credentials\\AddExperience.js":"31","C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\component\\dashboard\\Experience.js":"32","C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\component\\dashboard\\Education.js":"33","C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\component\\profiles\\Profiles.js":"34","C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\component\\profiles\\ProfileItem.js":"35"},{"size":500,"mtime":499162500000,"results":"36","hashOfConfig":"37"},{"size":3041,"mtime":1610756027852,"results":"38","hashOfConfig":"37"},{"size":362,"mtime":499162500000,"results":"39","hashOfConfig":"37"},{"size":2593,"mtime":1610574183598,"results":"40","hashOfConfig":"37"},{"size":243,"mtime":1610092952539,"results":"41","hashOfConfig":"37"},{"size":1309,"mtime":1610312204595,"results":"42","hashOfConfig":"37"},{"size":3649,"mtime":1610322529150,"results":"43","hashOfConfig":"37"},{"size":2863,"mtime":1610457075822,"results":"44","hashOfConfig":"37"},{"size":420,"mtime":1610210441834,"results":"45","hashOfConfig":"37"},{"size":292,"mtime":1610320077878,"results":"46","hashOfConfig":"37"},{"size":507,"mtime":1609509587380,"results":"47","hashOfConfig":"37"},{"size":351,"mtime":1610740002825,"results":"48","hashOfConfig":"37"},{"size":1499,"mtime":1610318218052,"results":"49","hashOfConfig":"37"},{"size":293,"mtime":1609509626307,"results":"50","hashOfConfig":"37"},{"size":318,"mtime":1610260263539,"results":"51","hashOfConfig":"37"},{"size":232,"mtime":1610260196194,"results":"52","hashOfConfig":"37"},{"size":1197,"mtime":1610313858486,"results":"53","hashOfConfig":"37"},{"size":811,"mtime":1610751750712,"results":"54","hashOfConfig":"37"},{"size":2183,"mtime":1610751761212,"results":"55","hashOfConfig":"37"},{"size":3348,"mtime":1610757589845,"results":"56","hashOfConfig":"37"},{"size":275,"mtime":1610377281727,"results":"57","hashOfConfig":"37"},{"size":619,"mtime":1610406695150,"results":"58","hashOfConfig":"37"},{"size":7909,"mtime":1610757111939,"results":"59","hashOfConfig":"37"},{"size":1014,"mtime":1610430666238,"results":"60","hashOfConfig":"37"},{"size":1158,"mtime":1610431747564,"results":"61","hashOfConfig":"37"},{"size":1170,"mtime":1610438583471,"results":"62","hashOfConfig":"37"},{"size":691,"mtime":1610513359014,"results":"63","hashOfConfig":"37"},{"size":691,"mtime":1610513359014,"results":"64","hashOfConfig":"37"},{"size":9808,"mtime":1610733852644,"results":"65","hashOfConfig":"37"},{"size":4665,"mtime":1609507011420,"results":"66","hashOfConfig":"37"},{"size":4610,"mtime":1609507018735,"results":"67","hashOfConfig":"37"},{"size":2503,"mtime":1610743287318,"results":"68","hashOfConfig":"37"},{"size":2671,"mtime":1610743634729,"results":"69","hashOfConfig":"37"},{"size":1326,"mtime":1610785607263,"results":"70","hashOfConfig":"37"},{"size":1365,"mtime":1610756637741,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"qlpm1z",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"74"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"74"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"74"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"74"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\index.js",[],["151","152"],"C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\App.js",[],"C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\reportWebVitals.js",[],"C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\component\\layout\\Navbar.js",["153"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logoutUser } from \"../../actions/authActions\";\r\nimport { clearCurrentProfile } from \"../../actions/profileActions\";\r\nfunction Navbar() {\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector((state) => state.auth);\r\n\r\n  const onLogOutClick = (e) => {\r\n    e.preventDefault();\r\n    dispatch(clearCurrentProfile());\r\n    dispatch(logoutUser());\r\n    // logoutUser();\r\n  };\r\n\r\n  const { isAuthenticated, user } = auth;\r\n\r\n  const authLinks = (\r\n    <ul className=\"navbar-nav ml-auto\">\r\n      <li className=\"nav-item\">\r\n        <Link className=\"nav-link\" to=\"/dashboard\">\r\n          Dashboard\r\n        </Link>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <a href=\"\" onClick={onLogOutClick} className=\"nav-link\">\r\n          <img\r\n            className=\"rounded-circle\"\r\n            src={user.avatar}\r\n            alt={user.name}\r\n            style={{ width: \"25px\", marginRight: \"5px\" }}\r\n            title=\"You must have Gravatar connected to your email to display an image\"\r\n          />\r\n          Logout\r\n        </a>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n  const guestLinks = (\r\n    <ul className=\"navbar-nav ml-auto\">\r\n      <li className=\"nav-item\">\r\n        <Link className=\"nav-link\" to=\"/register\">\r\n          Sign Up\r\n        </Link>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <Link className=\"nav-link\" to=\"/login\">\r\n          Login\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark mb-4\">\r\n      <div className=\"container\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          DevConnector\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#mobile-nav\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/profiles\">\r\n                {\" \"}\r\n                Developers\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          {isAuthenticated ? authLinks : guestLinks}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nNavbar.proptTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n};\r\nexport default Navbar;\r\n","C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\component\\layout\\Footer.js",[],"C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\component\\layout\\Landing.js",[],"C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\component\\auth\\Register.js",["154"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\n//import classnames from \"classnames\";\r\n//import PropTypes from \"prop-types\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { registerUser } from \"../../actions/authActions\";\r\nimport TextFieldGroup from \"../common/TextFieldGroup\";\r\n\r\nfunction Register() {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setconfirmPassword] = useState(\"\");\r\n  const [error, setError] = useState({ email: \"\", password: \"\" });\r\n\r\n  /*********************** */\r\n  //From stores\r\n\r\n  let errors = useSelector((state) => state.errors);\r\n  const auth = useSelector((state) => state.auth);\r\n  //Dispatching\r\n  const dispatch = useDispatch();\r\n  //history\r\n  const history = useHistory();\r\n  //free temp\r\n  // https://twitter.com/sunilc_/status/1347962741789626370\r\n  //https://templatemo.com/\r\n  /****************** */\r\n  //prevent accessing aunthe\r\n\r\n  useLayoutEffect(() => {\r\n    if (auth.isAuthenticated) {\r\n      history.push(\"/dashboard\");\r\n    }\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (errors) {\r\n      setError({ error: errors });\r\n    }\r\n  }, [errors]);\r\n\r\n  function onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newUser = {\r\n      name,\r\n      email,\r\n      password,\r\n      confirmPassword,\r\n    };\r\n    dispatch(registerUser(newUser, history));\r\n  }\r\n\r\n  return (\r\n    <div className=\"register\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8 m-auto\">\r\n            <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n            <p className=\"lead text-center\">Create your DevConnector account</p>\r\n            <form noValidate onSubmit={onSubmit}>\r\n              <TextFieldGroup\r\n                name=\"name\"\r\n                type=\"name\"\r\n                value={name}\r\n                placeholder=\"Name\"\r\n                error={errors.name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n              <TextFieldGroup\r\n                name=\"email\"\r\n                type=\"email\"\r\n                value={email}\r\n                placeholder=\"Email Address\"\r\n                error={errors.email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                info=\" This site uses Gravatar so if you want a profile image, use a\r\n                Gravatar email\"\r\n              />\r\n\r\n              <TextFieldGroup\r\n                name=\"password\"\r\n                type=\"password\"\r\n                value={password}\r\n                placeholder=\"Password\"\r\n                error={errors.password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n              <TextFieldGroup\r\n                name=\"Confirm Password\"\r\n                type=\"confirmpassword\"\r\n                value={confirmPassword}\r\n                placeholder=\"Confirm Password\"\r\n                error={errors.confirmPassword}\r\n                onChange={(e) => setconfirmPassword(e.target.value)}\r\n              />\r\n              <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Register.propTypes = {\r\n//   registerUser: PropTypes.func.isRequired,\r\n//   auth: PropTypes.object.isRequired,\r\n//   errors: PropTypes.object.isRequired,\r\n// };\r\nexport default Register;\r\n\r\n//export default withRouter(Register);\r\n//export default connect(null, { registerUser })(Register);\r\n","C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\component\\auth\\Login.js",["155"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\n//import { Link, Redirect } from \"react-router-dom\";\r\n//import classnames from \"classnames\";\r\n//import PropTypes from \"prop-types\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\nimport TextFieldGroup from \"../common/TextFieldGroup\";\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setErrors] = useState({ email: \"\", password: \"\" });\r\n\r\n  //********************** */\r\n  let errors = useSelector((state) => state.errors);\r\n  const auth = useSelector((state) => state.auth);\r\n\r\n  //Dispatching\r\n  const dispatch = useDispatch();\r\n  //history\r\n  const history = useHistory();\r\n\r\n  //**************************** */\r\n  //componentdidupdate\r\n  useLayoutEffect(() => {\r\n    if (auth.isAuthenticated) {\r\n      history.push(\"/dashboard\");\r\n    }\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  //Component will receivde props\r\n  useEffect(() => {\r\n    if (auth.isAuthenticated) {\r\n      history.push(\"/dashboard\");\r\n    }\r\n    if (errors) {\r\n      setErrors({ error: errors });\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [auth.isAuthenticated, errors]);\r\n\r\n  function onSubmit(e) {\r\n    e.preventDefault();\r\n    const userData = {\r\n      email,\r\n      password,\r\n    };\r\n    dispatch(loginUser(userData));\r\n  }\r\n  //errors = state.errors;\r\n  //  onChange={(e) => setEmail(e.target.value)}\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8 m-auto\">\r\n            <h1 className=\"display-4 text-center\">Log In</h1>\r\n            <p className=\"lead text-center\">\r\n              Sign in to your DevConnector account\r\n            </p>\r\n            <form noValidate onSubmit={onSubmit}>\r\n              <TextFieldGroup\r\n                name=\"email\"\r\n                type=\"email\"\r\n                value={email}\r\n                placeholder=\"Email Address\"\r\n                error={errors.email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n\r\n              <TextFieldGroup\r\n                name=\"password\"\r\n                type=\"password\"\r\n                value={password}\r\n                placeholder=\"Password\"\r\n                error={errors.password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n\r\n              <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n// Login.propTypes = {\r\n//   loginUser: PropTypes.func.isRequired,\r\n//   auth: PropTypes.object.isRequired,\r\n//   errors: PropTypes.object.isRequired,\r\n// };\r\nexport default Login;\r\n","C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\store.js",[],"C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\reducers\\index.js",[],"C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\reducers\\authReducer.js",[],"C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\actions\\types.js",[],"C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\actions\\authActions.js",[],"C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\reducers\\errorReducer.js",[],"C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\validation\\is-empty.js",[],"C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\component\\common\\TextFieldGroup.js",[],"C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\reducers\\profileReducer.js",[],"C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\component\\dashboard\\Dashboard.js",["156","157"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getCurrentProfile, deleteAccount } from \"../../actions/profileActions\";\r\nimport ProfileActions from \"./ProfileActions\";\r\nimport Spinner from \"../common/Spinner\";\r\nimport Education from \"./Education\";\r\nimport Experience from \"./Experience\";\r\n\r\nfunction Dashboard() {\r\n  const dispatch = useDispatch();\r\n  useLayoutEffect(() => {\r\n    dispatch(getCurrentProfile());\r\n    // eslint-disable-next-line\r\n  }, []);\r\n  const onDeleteClick = () => {\r\n    dispatch(deleteAccount());\r\n  };\r\n\r\n  const { user } = useSelector((state) => state.auth);\r\n  const { profile, loading } = useSelector((state) => state.profile);\r\n\r\n  let dashboardContent;\r\n\r\n  if (profile === null || loading) {\r\n    dashboardContent = <Spinner />;\r\n  } else {\r\n    if (Object.keys(profile).length > 0) {\r\n      dashboardContent = (\r\n        <div>\r\n          <p className=\"lead text-muted\">\r\n            Welcome <Link to={`/profile/${profile.handle} `}>{user.name} </Link>\r\n          </p>\r\n          <ProfileActions />\r\n          <Experience experience={profile.experience} />\r\n          <Education education={profile.education} />\r\n          <div style={{ marginBottom: \"60px\" }}>\r\n            <button onClick={onDeleteClick} className=\"btn btn-danger\">\r\n              Delete My Account\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      dashboardContent = (\r\n        <div>\r\n          <p className=\"lead text-muted\">Welcome {user.name}</p>\r\n          <p>You have not yet setup a profile, please add some info</p>\r\n          <Link to=\"/create-profile\" className=\"btn btn-lg btn-info\">\r\n            Create Profile\r\n          </Link>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <h1 className=\"display-4\">Dashboard</h1>\r\n            {dashboardContent}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\actions\\profileActions.js",[],"C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\component\\common\\Spinner.js",["158"],"import React from \"react\";\r\nimport spinner from \"./spinner.gif\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <img\r\n        src={spinner}\r\n        alt=\"Loading\"\r\n        style={{ width: \"200px\", margin: \"auto\", display: \"block\" }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\component\\common\\PrivateRoute.js",[],"C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\component\\create-profile\\CreateProfile.js",[],"C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\component\\common\\TextAreaFieldGroup.js",[],"C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\component\\common\\InputGroup.js",[],"C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\component\\common\\SelectListGroup.js",[],"C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\component\\dashboard\\profileActions.js",[],"C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\component\\dashboard\\ProfileActions.js",[],"C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\component\\edit-profile\\EditProfile.js",[],"C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\component\\add-credentials\\AddEducation.js",[],"C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\component\\add-credentials\\AddExperience.js",["159"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport TextFieldGroup from \"../common/TextFieldGroup\";\r\nimport TextAreaFieldGroup from \"../common/TextAreaFieldGroup\";\r\nimport { addExperience } from \"../../actions/profileActions\";\r\n\r\nfunction AddExperience() {\r\n  const [company, setCompany] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [location, setLocation] = useState(\"\");\r\n  const [from, setFrom] = useState(\"\");\r\n  const [to, setTo] = useState(\"\");\r\n  const [current, setCurrent] = useState(false);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [errors, setErrors] = useState({});\r\n  const [disabled, setDisabled] = useState(false);\r\n\r\n  /************************* */\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const allErrors = useSelector((state) => state.errors);\r\n  /*************************** */\r\n  useEffect(() => {\r\n    if (allErrors) {\r\n      setErrors(allErrors);\r\n    }\r\n  }, [allErrors]);\r\n  function onSubmit(e) {\r\n    e.preventDefault();\r\n    const expData = {\r\n      company,\r\n      title,\r\n      location,\r\n      from,\r\n      to,\r\n      description,\r\n      current,\r\n    };\r\n    dispatch(addExperience(expData, history));\r\n  }\r\n\r\n  function onCheck() {\r\n    setCurrent(!current);\r\n    setDisabled(!disabled);\r\n  }\r\n\r\n  return (\r\n    <div className=\"add-experience\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8 m-auto\">\r\n            <Link to=\"/dashboard\" className=\"btn btn-light\">\r\n              Go Back\r\n            </Link>\r\n            <h1 className=\"display-4 text-center\">Add Experience</h1>\r\n            <p className=\"lead text-center \">\r\n              Add any job or experience that you have had in the past or currnet\r\n            </p>\r\n            <small className=\"d-block pb-3 text-warn\"> *= required</small>\r\n            <form onSubmit={onSubmit}>\r\n              <TextFieldGroup\r\n                placeholder=\"* Company\"\r\n                name=\"company\"\r\n                value={company}\r\n                onChange={(e) => setCompany(e.target.value)}\r\n                error={errors.company}\r\n              />\r\n              <TextFieldGroup\r\n                placeholder=\" *Job Title\"\r\n                name=\"title\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n                error={errors.title}\r\n              />\r\n              <TextFieldGroup\r\n                placeholder=\"Location\"\r\n                name=\"location\"\r\n                value={location}\r\n                onChange={(e) => setLocation(e.target.value)}\r\n                error={errors.location}\r\n              />\r\n              <h6>From Date</h6>\r\n              <TextFieldGroup\r\n                placeholder=\"From\"\r\n                name=\"from\"\r\n                type=\"date\"\r\n                value={from}\r\n                onChange={(e) => setFrom(e.target.value)}\r\n                error={errors.from}\r\n              />\r\n              <h6>To Date</h6>\r\n              <TextFieldGroup\r\n                placeholder=\"To\"\r\n                name=\"to\"\r\n                type=\"date\"\r\n                value={to}\r\n                onChange={(e) => setTo(e.target.value)}\r\n                error={errors.to}\r\n                disabled={disabled ? \"disabled\" : \"\"}\r\n              />\r\n              <div className=\"form-check mb-4\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"form-check-input\"\r\n                  name=\"current\"\r\n                  value={current}\r\n                  checked={current}\r\n                  onChange={onCheck}\r\n                  id=\"current\"\r\n                />\r\n                <label htmlFor=\"current\" className=\"form-check-label\">\r\n                  Current Job\r\n                </label>\r\n              </div>\r\n              <TextAreaFieldGroup\r\n                placeholder=\"Job Description\"\r\n                name=\"description\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n                error={errors.description}\r\n                info=\"Tell us about the position\"\r\n              />\r\n              <input\r\n                type=\"submit\"\r\n                value=\"Submit\"\r\n                className=\"btn btn-info btn-block mt-4\"\r\n              />\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddExperience;\r\n","C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\component\\dashboard\\Experience.js",["160"],"import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Moment from \"react-moment\";\r\nimport { deleteExperience } from \"../../actions/profileActions\";\r\n\r\nfunction Experience({ experience }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const onDeleteClick = (id) => {\r\n    dispatch(deleteExperience(id));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h4 className=\"mb-4\">Experience Credentials</h4>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Company</th>\r\n            <th>Title</th>\r\n            <th>Years</th>\r\n            <th></th>\r\n          </tr>\r\n          {experience.map((exp) => (\r\n            <tr key={exp._id}>\r\n              <td>{exp.company}</td>\r\n              <td>{exp.title}</td>\r\n              <td>\r\n                <Moment format=\"DD/MM/YYYY\">{exp.from}</Moment> -{\" \"}\r\n                {exp.to === null ? (\r\n                  \" Now\"\r\n                ) : (\r\n                  <Moment format=\"DD/MM/YYYY\">{exp.to}</Moment>\r\n                )}\r\n              </td>\r\n              <td>\r\n                <button\r\n                  onClick={(e) => onDeleteClick(exp._id)}\r\n                  className=\"btn btn-danger\"\r\n                >\r\n                  {\" \"}\r\n                  Delete{\" \"}\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Experience;\r\n//****************************\r\n\r\n{\r\n  /**\r\n\r\nimport React, { useLayoutEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getCurrentProfile, deleteAccount } from \"../../actions/profileActions\";\r\n//import ProfileActions from \"./ProfileActions\";\r\n\r\nfunction Experience({ experience }) {\r\n  const userExperience = experience.map((exp) => (\r\n    <tr key={exp.id}>\r\n      <td>{exp.company}</td>\r\n      <td>{exp.title}</td>\r\n      <td>\r\n        {exp.from} - {exp.to}\r\n      </td>\r\n      <td>\r\n        {\" \"}\r\n        <button className=\"btn btn-danger\"> Delete </button>{\" \"}\r\n      </td>\r\n    </tr>\r\n  ));\r\n  return (\r\n    <div>\r\n      <h4 className=\"mb-4\">Experience Credentials</h4>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Company</th>\r\n            <th>Title</th>\r\n            <th>Years</th>\r\n            <th></th>\r\n          </tr>\r\n          {userExperience}\r\n        </thead>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Experience;\r\n\r\n\r\n \r\n*/\r\n}\r\n","C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\component\\dashboard\\Education.js",["161"],"import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Moment from \"react-moment\";\r\nimport { deleteEducation } from \"../../actions/profileActions\";\r\n\r\nfunction Education({ education }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const onDeleteClick = (id) => {\r\n    dispatch(deleteEducation(id));\r\n    console.log(id);\r\n  };\r\n  return (\r\n    <div>\r\n      <h4 className=\"mb-4\">Education Credentials</h4>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>School</th>\r\n            <th>Degree</th>\r\n            <th>Field of Study</th>\r\n            <th>Description</th>\r\n            <th>Years</th>\r\n            <th></th>\r\n          </tr>\r\n          {education.map((edu) => (\r\n            <tr key={edu._id}>\r\n              <td>{edu.school}</td>\r\n              <td>{edu.degree}</td>\r\n              <td>{edu.fieldofstudy}</td>\r\n              <td>{edu.decription}</td>\r\n              <td>\r\n                <Moment format=\"DD/MM/YYYY\">{edu.from}</Moment> -{\" \"}\r\n                {edu.to === null ? (\r\n                  \" Now\"\r\n                ) : (\r\n                  <Moment format=\"DD/MM/YYYY\">{edu.to}</Moment>\r\n                )}\r\n              </td>\r\n              <td>\r\n                <button\r\n                  onClick={(e) => onDeleteClick(edu._id)}\r\n                  className=\"btn btn-danger\"\r\n                >\r\n                  {\" \"}\r\n                  Delete{\" \"}\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Education;\r\n//****************************\r\n\r\n{\r\n  /**\r\n\r\nimport React, { useLayoutEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getCurrentProfile, deleteAccount } from \"../../actions/profileActions\";\r\n//import ProfileActions from \"./ProfileActions\";\r\n\r\nfunction Experience({ experience }) {\r\n  const userExperience = experience.map((exp) => (\r\n    <tr key={exp.id}>\r\n      <td>{exp.company}</td>\r\n      <td>{exp.title}</td>\r\n      <td>\r\n        {exp.from} - {exp.to}\r\n      </td>\r\n      <td>\r\n        {\" \"}\r\n        <button className=\"btn btn-danger\"> Delete </button>{\" \"}\r\n      </td>\r\n    </tr>\r\n  ));\r\n  return (\r\n    <div>\r\n      <h4 className=\"mb-4\">Experience Credentials</h4>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Company</th>\r\n            <th>Title</th>\r\n            <th>Years</th>\r\n            <th></th>\r\n          </tr>\r\n          {userExperience}\r\n        </thead>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Experience;\r\n\r\n\r\n \r\n*/\r\n}\r\n","C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\component\\profiles\\Profiles.js",["162"],"C:\\Users\\pete\\Desktop\\devconnector\\client\\src\\component\\profiles\\ProfileItem.js",[],{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","severity":1,"message":"168","line":28,"column":9,"nodeType":"169","endLine":28,"endColumn":65},{"ruleId":"170","severity":1,"message":"171","line":14,"column":10,"nodeType":"172","messageId":"173","endLine":14,"endColumn":15},{"ruleId":"170","severity":1,"message":"171","line":13,"column":10,"nodeType":"172","messageId":"173","endLine":13,"endColumn":15},{"ruleId":"170","severity":1,"message":"174","line":1,"column":17,"nodeType":"172","messageId":"173","endLine":1,"endColumn":25},{"ruleId":"170","severity":1,"message":"175","line":1,"column":27,"nodeType":"172","messageId":"173","endLine":1,"endColumn":36},{"ruleId":"176","severity":1,"message":"177","line":4,"column":1,"nodeType":"178","endLine":14,"endColumn":3},{"ruleId":"170","severity":1,"message":"179","line":1,"column":38,"nodeType":"172","messageId":"173","endLine":1,"endColumn":53},{"ruleId":"180","severity":1,"message":"181","line":56,"column":1,"nodeType":"182","messageId":"183","endLine":102,"endColumn":2},{"ruleId":"180","severity":1,"message":"181","line":60,"column":1,"nodeType":"182","messageId":"183","endLine":106,"endColumn":2},{"ruleId":"184","severity":1,"message":"185","line":13,"column":6,"nodeType":"186","endLine":13,"endColumn":8,"suggestions":"187"},"no-native-reassign",["188"],"no-negated-in-lhs",["189"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useLayoutEffect' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","react-hooks/exhaustive-deps","React Hook useLayoutEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["190"],"no-global-assign","no-unsafe-negation",{"desc":"191","fix":"192"},"Update the dependencies array to be: [dispatch]",{"range":"193","text":"194"},[447,449],"[dispatch]"]